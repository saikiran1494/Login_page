-- FitnessTracker Database Schema
-- PL/SQL Script to create all tables

-- Create Users table
CREATE TABLE Users (
    UserId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Username VARCHAR2(50) NOT NULL UNIQUE,
    Email VARCHAR2(100) NOT NULL UNIQUE,
    Password VARCHAR2(100) NOT NULL,
    MobileNumber VARCHAR2(15) NOT NULL UNIQUE,
    FullName VARCHAR2(100),
    RegistrationDate DATE DEFAULT SYSDATE,
    IsActive NUMBER(1) DEFAULT 1,
    LastLoginDate DATE
);

-- Create UserOTP table
CREATE TABLE UserOTP (
    OTPId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId NUMBER NOT NULL,
    OTPCode VARCHAR2(6) NOT NULL,
    CreatedTime DATE DEFAULT SYSDATE,
    ExpiryTime DATE NOT NULL,
    IsUsed NUMBER(1) DEFAULT 0,
    Purpose VARCHAR2(20) NOT NULL,
    CONSTRAINT fk_userotp_user FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- Create Workouts table
CREATE TABLE Workouts (
    WorkoutId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Description VARCHAR2(500),
    Category VARCHAR2(50) NOT NULL,
    Duration NUMBER NOT NULL,
    Difficulty VARCHAR2(20) NOT NULL,
    IsActive NUMBER(1) DEFAULT 1,
    CreatedDate DATE DEFAULT SYSDATE
);

-- Create Exercises table
CREATE TABLE Exercises (
    ExerciseId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Description VARCHAR2(500),
    Category VARCHAR2(50) NOT NULL,
    MuscleGroup VARCHAR2(50) NOT NULL,
    Equipment VARCHAR2(50) NOT NULL,
    Instructions VARCHAR2(1000) NOT NULL,
    VideoUrl VARCHAR2(200),
    ImageUrl VARCHAR2(200),
    IsActive NUMBER(1) DEFAULT 1
);

-- Create WorkoutExercises junction table
CREATE TABLE WorkoutExercises (
    WorkoutId NUMBER NOT NULL,
    ExerciseId NUMBER NOT NULL,
    OrderIndex NUMBER NOT NULL,
    Sets NUMBER DEFAULT 3,
    Reps NUMBER DEFAULT 10,
    Duration NUMBER DEFAULT 60,
    CONSTRAINT pk_workoutexercises PRIMARY KEY (WorkoutId, ExerciseId),
    CONSTRAINT fk_workoutexercises_workout FOREIGN KEY (WorkoutId) REFERENCES Workouts(WorkoutId),
    CONSTRAINT fk_workoutexercises_exercise FOREIGN KEY (ExerciseId) REFERENCES Exercises(ExerciseId)
);

-- Create WorkoutLogs table
CREATE TABLE WorkoutLogs (
    LogId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId NUMBER NOT NULL,
    WorkoutId NUMBER NOT NULL,
    LogDate DATE DEFAULT SYSDATE,
    Duration NUMBER NOT NULL,
    CaloriesBurned NUMBER DEFAULT 0,
    Notes VARCHAR2(500),
    Status VARCHAR2(20) DEFAULT 'Completed',
    CreatedTime DATE DEFAULT SYSDATE,
    CONSTRAINT fk_workoutlogs_user FOREIGN KEY (UserId) REFERENCES Users(UserId),
    CONSTRAINT fk_workoutlogs_workout FOREIGN KEY (WorkoutId) REFERENCES Workouts(WorkoutId)
);

-- Create Diets table
CREATE TABLE Diets (
    DietId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Description VARCHAR2(500),
    Category VARCHAR2(50) NOT NULL,
    DailyCalories NUMBER NOT NULL,
    ProteinPercentage NUMBER(5,2) NOT NULL,
    CarbohydratePercentage NUMBER(5,2) NOT NULL,
    FatPercentage NUMBER(5,2) NOT NULL,
    IsActive NUMBER(1) DEFAULT 1,
    CreatedDate DATE DEFAULT SYSDATE
);

-- Create Meals table
CREATE TABLE Meals (
    MealId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DietId NUMBER NOT NULL,
    Name VARCHAR2(100) NOT NULL,
    Description VARCHAR2(500),
    MealType VARCHAR2(20) NOT NULL,
    Calories NUMBER NOT NULL,
    Protein NUMBER(8,2) NOT NULL,
    Carbohydrates NUMBER(8,2) NOT NULL,
    Fat NUMBER(8,2) NOT NULL,
    Fiber NUMBER(8,2) DEFAULT 0,
    Ingredients VARCHAR2(1000),
    Instructions VARCHAR2(1000),
    ImageUrl VARCHAR2(200),
    IsActive NUMBER(1) DEFAULT 1,
    CONSTRAINT fk_meals_diet FOREIGN KEY (DietId) REFERENCES Diets(DietId)
);

-- Create MealLogs table
CREATE TABLE MealLogs (
    LogId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId NUMBER NOT NULL,
    MealId NUMBER NOT NULL,
    LogDate DATE DEFAULT SYSDATE,
    MealType VARCHAR2(20) NOT NULL,
    Calories NUMBER NOT NULL,
    Protein NUMBER(8,2) NOT NULL,
    Carbohydrates NUMBER(8,2) NOT NULL,
    Fat NUMBER(8,2) NOT NULL,
    Fiber NUMBER(8,2) DEFAULT 0,
    Notes VARCHAR2(500),
    CreatedTime DATE DEFAULT SYSDATE,
    CONSTRAINT fk_meallogs_user FOREIGN KEY (UserId) REFERENCES Users(UserId),
    CONSTRAINT fk_meallogs_meal FOREIGN KEY (MealId) REFERENCES Meals(MealId)
);

-- Create Rewards table
CREATE TABLE Rewards (
    RewardId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Description VARCHAR2(500),
    Category VARCHAR2(20) NOT NULL,
    PointsRequired NUMBER NOT NULL,
    BadgeIcon VARCHAR2(100),
    BadgeColor VARCHAR2(20),
    IsActive NUMBER(1) DEFAULT 1,
    CreatedDate DATE DEFAULT SYSDATE
);

-- Create UserRewards table
CREATE TABLE UserRewards (
    UserRewardId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId NUMBER NOT NULL,
    RewardId NUMBER NOT NULL,
    EarnedDate DATE DEFAULT SYSDATE,
    PointsEarned NUMBER NOT NULL,
    Notes VARCHAR2(500),
    CONSTRAINT fk_userrewards_user FOREIGN KEY (UserId) REFERENCES Users(UserId),
    CONSTRAINT fk_userrewards_reward FOREIGN KEY (RewardId) REFERENCES Rewards(RewardId)
);

-- Create DailyStreaks table
CREATE TABLE DailyStreaks (
    StreakId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserId NUMBER NOT NULL,
    StreakDate DATE DEFAULT SYSDATE,
    WorkoutCompleted NUMBER(1) DEFAULT 0,
    DietFollowed NUMBER(1) DEFAULT 0,
    PointsEarned NUMBER DEFAULT 0,
    Notes VARCHAR2(500),
    CreatedTime DATE DEFAULT SYSDATE,
    CONSTRAINT fk_dailystreaks_user FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

-- Create indexes for better performance
CREATE INDEX idx_users_username ON Users(Username);
CREATE INDEX idx_users_email ON Users(Email);
CREATE INDEX idx_users_mobile ON Users(MobileNumber);
CREATE INDEX idx_userotp_userid ON UserOTP(UserId);
CREATE INDEX idx_userotp_expiry ON UserOTP(ExpiryTime);
CREATE INDEX idx_workoutlogs_userid ON WorkoutLogs(UserId);
CREATE INDEX idx_workoutlogs_date ON WorkoutLogs(LogDate);
CREATE INDEX idx_meallogs_userid ON MealLogs(UserId);
CREATE INDEX idx_meallogs_date ON MealLogs(LogDate);
CREATE INDEX idx_userrewards_userid ON UserRewards(UserId);
CREATE INDEX idx_dailystreaks_userid ON DailyStreaks(UserId);
CREATE INDEX idx_dailystreaks_date ON DailyStreaks(StreakDate);

-- Create sequences for ID generation (if not using IDENTITY)
-- CREATE SEQUENCE seq_users START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE seq_workouts START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE seq_exercises START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE seq_meals START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE seq_rewards START WITH 1 INCREMENT BY 1;

-- Grant permissions (adjust as needed for your Oracle setup)
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Users TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON UserOTP TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Workouts TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Exercises TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON WorkoutExercises TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON WorkoutLogs TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Diets TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Meals TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON MealLogs TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON Rewards TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON UserRewards TO fitness_user;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON DailyStreaks TO fitness_user;

COMMIT; 